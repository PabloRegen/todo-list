{"version":3,"sources":["comp/Title.js","comp/NewTaskBar.js","comp/ViewBar.js","comp/OrderByBar.js","comp/SearchBar.js","comp/UserDisplayPreference.js","comp/TotalTasksToDo.js","comp/EditTask.js","comp/DisplayOrEdit.js","comp/Task.js","comp/TasksList.js","comp/ClearTasks.js","lib/viewAndOrderByOptions.js","comp/App.js","lib/amountTasksToDo.js","lib/updateTasksList.js","index.js"],"names":["Title","react_default","a","createElement","className","NewTaskBar","_ref","newTask","dueOn","onChange","onKeyDown","e","undefined","name","type","placeholder","value","ViewBar","viewOptions","viewValue","map","option","key","label","OrderByBar","orderByValue","orderByOptions","SearchBar","searchValue","UserDisplayPreference","comp_ViewBar","comp_OrderByBar","comp_SearchBar","TotalTasksToDo","totalTasksToDo","textChanging","onBlur","noteChanging","dateChanging","EditTask","changing","task","onTaskAction","text","note","id","change","Object","objectSpread","whatIsChanging","concat","autoFocus","textCalling","onClick","noteCalling","dateCalling","DisplayOrEdit","calling","editingText","editingNote","editingDate","dueOnCalendarStyle","moment","calendar","split","displayEdit","content","editing","whoIsCalling","comp_EditTask","Task","onTaskDelete","done","starred","noteOpen","classTaskCompleted","classDueToday","checked","TasksList","userPreferenceToDoList","listTasks","comp_Task","ClearTasks","onClearCompletedTasks","onClearAllTasks","App","state","todoList","handleChange","_e$target","target","_this","setState","defineProperty","handleKeyDown","taskId","keyDownFor","handleAddNewTask","handleTaskAction","preventDefault","_this$state","trim","newItem","Date","now","postedOn","alert","action","handleTaskDelete","filter","handleClearCompletedTasks","handleClearAllTasks","handleLeavePage","localStorage","setItem","JSON","stringify","window","addEventListener","this","parse","getItem","removeEventListener","_this$state2","comp_Title","comp_NewTaskBar","comp_UserDisplayPreference","comp_TotalTasksToDo","length","amountTasksToDo","comp_TasksList","updatedTasksList","sort","b","toLowerCase","indexOf","updateTasksList","comp_ClearTasks","Component","ReactDOM","render","comp_App","document","getElementById"],"mappings":"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","file":"static/js/main.e88995d2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => <p className='title'>TODO LIST</p>;\n\nexport default Title;","import React from 'react';\n\nconst NewTaskBar = ({ newTask, dueOn, onChange, onKeyDown }) => {\n    return (\n        <form\n            className='flexRow'\n            onKeyDown={e => onKeyDown(e, undefined, 'keyDownToAddNewTask')}>\n            <input\n                className='taskFlexGrow newTask'\n            \tname='newTask'\n            \ttype='text'\n            \tplaceholder='I need to...'\n            \tvalue={newTask}\n            \tonChange={onChange} />\n            <input\n                className='dueOn fontFamily'\n                name='dueOn'\n                type='date'\n                value={dueOn}\n                onChange={onChange} />\n        </form>\n    );\n};\n\nexport default NewTaskBar;","import React from 'react';\n\nconst ViewBar = ({ viewOptions, viewValue, onChange }) => {\n\treturn (\n\t    <select\n\t        className='select pointer'\n\t        name='viewValue'\n\t        value={viewValue}\n\t        onChange={onChange}\n\t    >\n\t        { viewOptions.map(option => <option key={option.value} value={option.value}>{option.label}</option>) }\n\t    </select>\n\t);\n};\n\nexport default ViewBar;","import React from 'react';\n\nconst OrderByBar = ({ orderByValue, orderByOptions, onChange }) => {\t\n\treturn (\n\t    <select\n\t        className='select pointer'\n\t        name='orderByValue'\n\t        value={orderByValue}\n\t        onChange={onChange}\n\t    >\n\t        { orderByOptions.map(option => <option key={option.value} value={option.value}>{option.label}</option>) }\n\t    </select>\n\t);\n};\n\nexport default OrderByBar;","import React from 'react';\n\nconst SearchBar = ({ searchValue, onChange }) => {\n\treturn (\n\t    <input\n\t        className='search'\n\t        name='searchValue'\n\t        type='search'\n\t        placeholder='Search tasks...'\n\t        value={searchValue}\n\t        onChange={onChange}\n\t    />\n\t);\n};\n\nexport default SearchBar;","import React from 'react';\nimport ViewBar from './ViewBar';\nimport OrderByBar from './OrderByBar';\nimport SearchBar from './SearchBar';\n\nconst UserDisplayPreference = ({ viewOptions, orderByOptions, viewValue, orderByValue, searchValue, onChange }) => {\n    return (\n        <div className='flexRow'>\n            <ViewBar\n                viewOptions={viewOptions}\n                viewValue={viewValue}\n                onChange={onChange} />\n            <OrderByBar\n                orderByOptions={orderByOptions}\n                orderByValue={orderByValue}\n                onChange={onChange} />\n            <SearchBar\n                searchValue={searchValue}\n                onChange={onChange} />\n        </div>\n    );\n};\n\nexport default UserDisplayPreference;","import React from 'react';\n\nconst TotalTasksToDo = ({totalTasksToDo}) => {\n\treturn (\n\t    <p className='totalTasks'>\n\t        I have <span className='emphasis'>{totalTasksToDo}</span> {totalTasksToDo === 1 ? 'thing' : 'things'} to do\n\t    </p>\n\t);\n};\n\nexport default TotalTasksToDo;","import React from 'react';\n\nconst textChanging = {\n\tclassName: 'editText',\n\ttype: 'text',\n\tonChange: 'editText',\n\tonBlur: 'saveText',\n\tonKeyDown: 'keyDownToEditText'\n};\n\nconst noteChanging = {\n\tclassName: 'editNote',\n\ttype: 'text',\n\tonChange: 'editNote',\n\tonBlur: 'saveNote',\n\tonKeyDown: 'keyDownToEditNote'\n};\n\nconst dateChanging = {\n\tclassName: 'editDate',\n\ttype: 'date',\n\tonChange: 'editDate',\n\tonBlur: 'saveDate',\n\tonKeyDown: 'keyDownToEditDate'\n};\n\nconst EditTask = ({ changing, task, onTaskAction, onKeyDown }) => {\n\tconst { text, note, dueOn, id } = task;\n\n\tconst whatIsChanging = changing => {\n\t\tif (changing === 'theText') return { ...textChanging, value: text };\n\t\tif (changing === 'theNote') return { ...noteChanging, value: note };\n\t\tif (changing === 'theDate') return { ...dateChanging, value: dueOn};\n\t};\n\n\tconst change = whatIsChanging(changing);\n\n\treturn (\n\t    <input\n\t        className={ `${change.className} fontFamily` }\n\t        type={ change.type }\n\t        value={ change.value }\n\t        onChange={ e => onTaskAction(e, id, change.onChange) }\n\t        onBlur={ e => onTaskAction(e, id, change.onBlur) }\n\t        onKeyDown={ e => onKeyDown(e, id, change.onKeyDown) }\n\t        autoFocus />\n\t);\n};\n\nexport default EditTask;","import React from 'react';\nimport moment from 'moment';\nimport EditTask from './EditTask';\n\nconst textCalling = {\n    className: 'content',\n    onClick: 'clickText'\n};\n\nconst noteCalling = {\n    className: 'note',\n    onClick: 'clickNote'\n};\n\nconst dateCalling = {\n    className: 'content',\n    onClick: 'clickDate'\n};\n\nconst DisplayOrEdit = (calling, task, onTaskAction, onKeyDown) => {\n    const { id, text, note, dueOn, editingText, editingNote, editingDate } = task;\n    const dueOnCalendarStyle = (dueOn === '' ? '' : moment(dueOn, 'YYYY-MM-DD').calendar().split(' at')[0]);\n\n    const whoIsCalling = calling => {\n        if (calling === 'theText') return { ...textCalling, content: text, editing: editingText };\n        if (calling === 'theNote') return { ...noteCalling, content: note, editing: editingNote };\n        if (calling === 'theDate') return { ...dateCalling, content: dueOnCalendarStyle, editing: editingDate };\n    }\n\n    const displayEdit = whoIsCalling(calling);\n\n    if (displayEdit.editing) {\n        return (\n            <EditTask\n                changing={calling}\n                task={task}\n                onTaskAction={onTaskAction}\n                onKeyDown={onKeyDown} />\n        );\n    } else {\n        return (\n            <span\n                className={`${displayEdit.className} pointer`}\n                onClick={e => onTaskAction(e, id, displayEdit.onClick)}>\n                {displayEdit.content || ':'}\n            </span>\n        );\n    }\n}\n\nexport default DisplayOrEdit;","import React from 'react';\nimport moment from 'moment';\nimport DisplayOrEdit from './DisplayOrEdit';\n\nconst Task = ({ task, onTaskAction, onKeyDown, onTaskDelete }) => {\n    const { done, dueOn, starred, id, noteOpen } = task;\n    const classTaskCompleted = (done ? 'taskCompleted' : '');\n    const dueOnText = (dueOn === '' ? '' : moment(dueOn, 'YYYY-MM-DD').calendar().split(' at')[0]);\n    const classDueToday = (dueOnText === 'Today' ? 'dueToday' : '');\n\n    return (\n        <li>\n            <form>\n                <div className='flexRow'>\n                    <input\n                        className='check pointer'\n                        type='checkbox'\n                        checked={done}\n                        onChange={e => onTaskAction(e, id, 'taskDone')} />\n                    <button \n                        className='collapsible'\n                        type='button'\n                        onClick={e => onTaskAction(e, id, 'clickCollapsible')}/>\n                    <span\n                        className={`taskFlexGrow ${classTaskCompleted}`}>\n                        {DisplayOrEdit('theText', task, onTaskAction, onKeyDown)}\n                    </span>\n                    <span\n                        className={`${classTaskCompleted} ${classDueToday}`}>\n                        {DisplayOrEdit('theDate', task, onTaskAction, onKeyDown)}\n                    </span>\n                    <input\n                        className='star pointer'\n                        type='checkbox'\n                        checked={starred}\n                        onChange={e => onTaskAction(e, id, 'taskStarred')} />\n                    <button\n                        className='pointer'\n                        type='button'\n                        onClick={() => onTaskDelete(id)}>\n                        x\n                    </button>\n                </div>\n                <div className={'collapse' + (noteOpen ? 'In' : '')}>\n                    <div>\n                        {DisplayOrEdit('theNote', task, onTaskAction, onKeyDown)}\n                    </div>\n                </div>\n            </form>\n        </li>\n    );\n};\n\nexport default Task; ","import React from 'react';\nimport Task from './Task';\n\nconst TasksList = ({ userPreferenceToDoList, onTaskAction, onKeyDown, onTaskDelete }) => {\n    const listTasks = userPreferenceToDoList.map(task => (\n        <Task\n            key={task.id}\n            task={task}\n            onTaskAction={onTaskAction}\n            onKeyDown={onKeyDown}\n            onTaskDelete={onTaskDelete} />\n    ));\n    \n    return <ul>{listTasks}</ul>;\n};\n\nexport default TasksList;","import React from 'react';\n\nconst ClearTasks = ({ onClearCompletedTasks, onClearAllTasks }) => {\n    return (\n        <div className='flexRow clearBtns'>\n            <button\n                className='clearBtn pointer'\n            \ttype='button'\n            \tonClick={onClearCompletedTasks}>\n            \tClear completed\n            </button>\n            <button\n                className='clearBtn pointer'\n            \ttype='button'\n            \tonClick={onClearAllTasks}>\n            \tClear all\n            </button>\n        </div>\n    );\n};\n\nexport default ClearTasks;","const viewOptions = [\n    { value: 'all', label: 'All tasks' },\n    { value: 'current', label: 'Active' },\n    { value: 'completed', label: 'Completed' },\n    { value: 'starred', label: 'Starred' },\n    { value: 'notStarred', label: 'Not starred' },\n    { value: 'dated', label: 'Dated' },\n    { value: 'notDated', label: 'Not dated' }\n];\n\nconst orderByOptions = [\n    { value: 'newestFirst', label: 'Newest first' },\n    { value: 'oldestFirst', label: 'Oldest first' },\n    { value: 'dueEarlier', label: 'Due earlier first' },\n    { value: 'dueLater', label: 'Due later first' }\n];\n\nexport { viewOptions, orderByOptions };","/*\nComponents structure:\n\n- App\n    - Title\n    - NewTaskBar\n    - UserDisplayPreference\n        - ViewBar\n        - OrderByBar\n        - SearchBar\n    - TotalTasksToDo\n    - TaskList\n        - Task\n    - ClearTasks\n*/\n\nimport React, { Component } from 'react';\nimport Title from './Title';\nimport NewTaskBar from './NewTaskBar';\nimport UserDisplayPreference from './UserDisplayPreference';\nimport TotalTasksToDo from './TotalTasksToDo';\nimport TasksList from './TasksList';\nimport ClearTasks from './ClearTasks';\nimport { amountTasksToDo } from '../lib/amountTasksToDo';\nimport { updateTasksList } from '../lib/updateTasksList';\nimport { viewOptions, orderByOptions } from '../lib/viewAndOrderByOptions';\n\nclass App extends Component {\n    state = {\n        todoList: [],\n        newTask: '',\n        dueOn: '',\n        searchValue: '',\n        viewValue: 'all',\n        orderByValue: 'newestFirst'\n    }\n    \n    handleChange = e => {\n        const { name, value } = e.target;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleKeyDown = (e, taskId, keyDownFor) => {\n        if (e.key === 'Enter') {\n            if (keyDownFor === 'keyDownToAddNewTask') this.handleAddNewTask(e);\n            if (keyDownFor === 'keyDownToEditText') this.handleTaskAction(e, taskId, 'saveText');\n            if (keyDownFor === 'keyDownToEditDate') this.handleTaskAction(e, taskId, 'saveDate');\n        }\n        // } else if (e.key === 'Escape') {\n    }\n\n    handleAddNewTask = e => {\n        e.preventDefault();\n        const { newTask, dueOn } = this.state;\n        \n        if (newTask.trim() === '') {\n            alert('▶ Please write a task');\n            return;\n        }\n        \n        const newItem = {\n            id: Date.now(),\n            text: newTask.trim(),\n            postedOn: Date.now(),\n            done: false,\n            note: '',\n            dueOn: dueOn,\n            starred: false,\n            editingText: false,\n            editingDate: false,\n            editingNote: false,\n            noteOpen: false,\n            // color: null,\n        };\n        \n        this.setState(state => ({\n            newTask: '',\n            dueOn: '',\n            todoList: state.todoList.concat([newItem]),\n        }));\n    }\n\n    handleTaskAction = (e, taskId, action) => {\n        const { value } = e.target;\n\n        this.setState(state => ({\n            todoList: state.todoList.map(task => {\n                if (task.id === taskId) {\n                    /* Use `if (action === 'done') return Object.assign({}, task, { done: !task.done })` or syntax below */\n                    if (action === 'taskDone') return { ...task, done: !task.done };\n                    if (action === 'taskStarred') return { ...task, starred: !task.starred };\n\n                    if (action === 'clickText') return { ...task, editingText: true };\n                    if (action === 'saveText') return { ...task, editingText: false };\n                    if (action === 'editText') return { ...task, text: value };\n\n                    if (action === 'clickDate') return { ...task, editingDate: true };\n                    if (action === 'saveDate') return { ...task, editingDate: false };\n                    if (action === 'editDate') return { ...task, dueOn: value };\n\n                    if (action === 'clickNote') return { ...task, editingNote: true };\n                    if (action === 'saveNote') return { ...task, editingNote: false };\n                    if (action === 'editNote') return { ...task, note: value };\n\n                    if (action === 'clickCollapsible') return { ...task, noteOpen: !task.noteOpen };\n                    return task;\n                } else {\n                    return task;\n                }\n            })\n        }));\n    }\n\n    handleTaskDelete = taskId => {\n        this.setState(state => ({\n            todoList: state.todoList.filter(task => task.id !== taskId)\n        }));\n    }\n    \n    handleClearCompletedTasks = () => {\n        this.setState(state => ({ \n            todoList: state.todoList.filter(task => !task.done)\n        }));\n    }\n\n    handleClearAllTasks = () => {\n        this.setState({\n            todoList: []\n        });\n    }\n    \n    handleLeavePage = () => {\n        localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.handleLeavePage);\n        this.setState({\n            todoList: JSON.parse(localStorage.getItem('todoList')) || []\n        })\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.handleLeavePage);\n    }\n\n    /* update localStorage on each & every state change. Different results than componentWillUnmount() when opening on more than 1 tab at once */\n    // componentDidUpdate() {\n    //  localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n    // }\n\n    render() {\n        const { todoList, newTask, dueOn, searchValue, viewValue, orderByValue } = this.state;\n\n        return (\n            <div>\n                <div className='header'>\n                    <Title />\n                    <NewTaskBar\n                        newTask={newTask}\n                        dueOn={dueOn}\n                        onChange={this.handleChange}\n                        onKeyDown={this.handleKeyDown} />\n                    <UserDisplayPreference\n                        viewOptions={viewOptions}\n                        orderByOptions={orderByOptions}\n                        viewValue={viewValue}\n                        orderByValue={orderByValue}\n                        searchValue={searchValue} \n                        onChange={this.handleChange} />\n                </div>\n                <TotalTasksToDo\n                    totalTasksToDo={amountTasksToDo(todoList)} />\n                <TasksList\n                    userPreferenceToDoList={updateTasksList(todoList, viewValue, orderByValue, searchValue)}\n                    onTaskAction={this.handleTaskAction}\n                    onKeyDown={this.handleKeyDown}\n                    onTaskDelete={this.handleTaskDelete} />\n                <ClearTasks\n                    onClearCompletedTasks={this.handleClearCompletedTasks}\n                    onClearAllTasks={this.handleClearAllTasks} />\n            </div>\n        );\n    }\n}\n\nexport default App;","export const amountTasksToDo = todoList => {\n\treturn todoList.filter(task => task.done === false).length;\n};","import moment from 'moment';\n\nexport const updateTasksList = (todoList, viewValue, orderByValue, searchValue) => {\n    let updatedTasksList;\n    \n    if (viewValue === 'current') {\n        updatedTasksList = todoList.filter(task => !task.done);\n    } else if (viewValue === 'completed') {\n        updatedTasksList = todoList.filter(task => task.done);\n    } else if (viewValue === 'starred') {\n        updatedTasksList = todoList.filter(task => task.starred);\n    } else if (viewValue === 'notStarred') {\n        updatedTasksList = todoList.filter(task => !task.starred);\n    } else if (viewValue === 'dated') {\n        updatedTasksList = todoList.filter(task => task.dueOn);\n    } else if (viewValue === 'notDated') {\n        updatedTasksList = todoList.filter(task => !task.dueOn);\n    } else {\n        updatedTasksList = todoList;\n    }\n    \n    if (orderByValue === 'newestFirst') {\n        updatedTasksList = updatedTasksList.sort((a, b) => b.postedOn - a.postedOn);\n    } else if (orderByValue === 'oldestFirst') {\n        updatedTasksList = updatedTasksList.sort((a, b) => a.postedOn - b.postedOn);\n    } else if (orderByValue === 'dueEarlier') {\n        updatedTasksList = updatedTasksList.sort((a, b) => moment(a.dueOn) - moment(b.dueOn));\n    } else {\n        updatedTasksList = updatedTasksList.sort((a, b) => moment(b.dueOn) - moment(a.dueOn));\n    }\n\n    if (searchValue.trim !== '') {\n        updatedTasksList = updatedTasksList.filter(task => task.text.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1);\n    }\n    \n    return updatedTasksList;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './comp/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}