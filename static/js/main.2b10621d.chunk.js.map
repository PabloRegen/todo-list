{"version":3,"sources":["comp/Title.js","comp/NewTaskBar.js","comp/ViewBar.js","comp/OrderByBar.js","comp/SearchBar.js","comp/UserDisplayPreference.js","comp/TotalTasksToDo.js","comp/EditText.js","comp/Task.js","comp/TasksList.js","comp/ClearTasks.js","lib/viewAndOrderByOptions.js","comp/App.js","lib/amountTasksToDo.js","lib/updateTasksList.js","index.js"],"names":["Title","react_default","a","createElement","className","NewTaskBar","_ref","newTask","dueOn","onChange","onAddNewTask","name","type","placeholder","value","onClick","ViewBar","viewOptions","viewValue","map","option","key","label","OrderByBar","orderByValue","orderByOptions","SearchBar","searchValue","UserDisplayPreference","comp_ViewBar","comp_OrderByBar","comp_SearchBar","TotalTasksToDo","totalTasksToDo","EditText","text","id","onTaskAction","onKeyDown","e","onBlur","autoFocus","Task","task","onTaskDelete","done","starred","isWritable","classTaskCompleted","dueOnText","moment","calendar","split","classDueToday","checked","concat","comp_EditText","trim","TasksList","userPreferenceToDoList","listTasks","comp_Task","ClearTasks","onClearCompletedTasks","onClearAllTasks","App","state","todoList","handleChange","_e$target","target","_this","setState","Object","defineProperty","handleAddNewTask","preventDefault","_this$state","newItem","Date","now","postedOn","handleTaskAction","taskId","action","objectSpread","handleKeyDown","handleTaskDelete","filter","handleClearCompletedTasks","handleClearAllTasks","handleLeavePage","localStorage","setItem","JSON","stringify","window","addEventListener","this","parse","getItem","removeEventListener","_this$state2","comp_Title","comp_NewTaskBar","comp_UserDisplayPreference","comp_TotalTasksToDo","length","amountTasksToDo","comp_TasksList","updatedTasksList","sort","b","toLowerCase","indexOf","updateTasksList","comp_ClearTasks","Component","ReactDOM","render","comp_App","document","getElementById"],"mappings":"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","file":"static/js/main.2b10621d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => <p className='title'>TODO LIST</p>;\n\nexport default Title;","import React from 'react';\n\nconst NewTaskBar = ({ newTask, dueOn, onChange, onAddNewTask }) => {\n    return (\n        <form className='flexRow'>\n            <input \n            \tclassName='newTask taskFlexGrow'\n            \tname='newTask'\n            \ttype='text'\n            \tplaceholder='I need to...'\n            \tvalue={newTask}\n            \tonChange={onChange} />\n            <input \n                className='dueOn'\n                name='dueOn'\n                type='date'\n                // placeholder='due...'\n                value={dueOn}\n                onChange={onChange} />\n            <button className='addBtn' type='button' onClick={onAddNewTask}>ADD</button>\n        </form>\n    );\n};\n\nexport default NewTaskBar;","import React from 'react';\n\nconst ViewBar = ({ viewOptions, viewValue, onChange }) => {\n\treturn (\n\t    <select\n\t        className='select'\n\t        name='viewValue'\n\t        value={viewValue}\n\t        onChange={onChange}\n\t    >\n\t        { viewOptions.map(option => <option key={option.value} value={option.value}>{option.label}</option>) }\n\t    </select>\n\t);\n};\n\nexport default ViewBar;","import React from 'react';\n\nconst OrderByBar = ({ orderByValue, orderByOptions, onChange }) => {\t\n\treturn (\n\t    <select\n\t        className='select'\n\t        name='orderByValue'\n\t        value={orderByValue}\n\t        onChange={onChange}\n\t    >\n\t        { orderByOptions.map(option => <option key={option.value} value={option.value}>{option.label}</option>) }\n\t    </select>\n\t);\n};\n\nexport default OrderByBar;","import React from 'react';\n\nconst SearchBar = ({ searchValue, onChange }) => {\n\treturn (\n\t    <input\n\t        className='search'\n\t        name='searchValue'\n\t        type='search'\n\t        placeholder='Search tasks...'\n\t        value={searchValue}\n\t        onChange={onChange}\n\t    />\n\t);\n};\n\nexport default SearchBar;","import React from 'react';\nimport ViewBar from './ViewBar';\nimport OrderByBar from './OrderByBar';\nimport SearchBar from './SearchBar';\n\nconst UserDisplayPreference = ({ viewOptions, orderByOptions, viewValue, orderByValue, searchValue, onChange }) => {\n    return (\n        <div className='flexRow'>\n            <ViewBar\n                viewOptions={viewOptions}\n                viewValue={viewValue}\n                onChange={onChange} />\n            <OrderByBar\n                orderByOptions={orderByOptions}\n                orderByValue={orderByValue}\n                onChange={onChange} />\n            <SearchBar\n                searchValue={searchValue}\n                onChange={onChange} />\n        </div>\n    );\n};\n\nexport default UserDisplayPreference;","import React from 'react';\n\nconst TotalTasksToDo = ({totalTasksToDo}) => {\n\treturn (\n\t    <p className='totalTasks'>\n\t        I have <span className='emphasis'>{totalTasksToDo}</span> {totalTasksToDo === 1 ? 'thing' : 'things'} to do\n\t    </p>\n\t);\n};\n\nexport default TotalTasksToDo;","import React from 'react';\n\nconst EditText = ({ text, id, onTaskAction, onKeyDown }) => (\n    <input\n        className='editText'\n        type='text'\n        value={text}\n        onChange={e => onTaskAction(e, id, 'edit')}\n        onBlur={e => onTaskAction(e, id, 'save')}\n        onKeyDown={e => onKeyDown(e, id)}\n        autoFocus />\n);\n\nexport default EditText;","import React from 'react';\nimport moment from 'moment';\nimport EditText from './EditText';\n\nconst Task = ({ task, onTaskAction, onKeyDown, onTaskDelete }) => {\n    const { text, done, dueOn, starred, id, isWritable } = task;\n    const classTaskCompleted = (done ? 'taskCompleted' : '');\n    const dueOnText = (dueOn === '' ? '' : moment(dueOn, 'YYYY-MM-DD').calendar().split(' at')[0]);\n    const classDueToday = (dueOnText === 'Today' ? 'dueToday' : '');\n\n    return (\n        <li>\n            <form className='flexRow'>\n                <input \n                    type='checkbox'\n                    checked={done}\n                    onChange={e => onTaskAction(e, id, 'done')} />\n                <span\n                    className={`taskFlexGrow ${classTaskCompleted}`}>\n                    {isWritable\n                        ? <EditText\n                            text={text}\n                            id={id}\n                            onTaskAction={onTaskAction}\n                            onKeyDown={onKeyDown} />\n                        : <span onClick={e => onTaskAction(e, id, 'click')}>{text.trim()}</span>\n                    }\n                </span>\n                <span\n                    className={`${classTaskCompleted} ${classDueToday}`}>\n                    {dueOnText}\n                </span>\n                <input\n                    className='star'\n                    type='checkbox'\n                    checked={starred}\n                    onChange={e => onTaskAction(e, id, 'star')} />\n                <button\n                    type='button'\n                    onClick={() => onTaskDelete(id)}>\n                    x\n                </button>\n            </form>\n        </li>\n    );\n};\n\nexport default Task;","import React from 'react';\nimport Task from './Task';\n\nconst TasksList = ({ userPreferenceToDoList, onTaskAction, onKeyDown, onTaskDelete }) => {\n    const listTasks = userPreferenceToDoList.map(task => (\n        <Task\n            key={task.id}\n            task={task}\n            onTaskAction={onTaskAction}\n            onKeyDown={onKeyDown}\n            onTaskDelete={onTaskDelete} />\n    ));\n    \n    return <ul>{listTasks}</ul>;\n};\n\nexport default TasksList;","import React from 'react';\n\nconst ClearTasks = ({ onClearCompletedTasks, onClearAllTasks }) => {\n    return (\n        <div className='flexRow clearBtns'>\n            <button \n            \tclassName='clearBtn'\n            \ttype='button'\n            \tonClick={onClearCompletedTasks}>\n            \tClear completed\n            </button>\n            <button\n            \tclassName='clearBtn'\n            \ttype='button'\n            \tonClick={onClearAllTasks}>\n            \tClear all\n            </button>\n        </div>\n    );\n};\n\nexport default ClearTasks;","const viewOptions = [\n    { value: 'all', label: 'All tasks' },\n    { value: 'current', label: 'Active' },\n    { value: 'completed', label: 'Completed' },\n    { value: 'starred', label: 'Starred' },\n    { value: 'notStarred', label: 'Not starred' },\n    { value: 'dated', label: 'Dated' },\n    { value: 'notDated', label: 'Not dated' }\n];\n\nconst orderByOptions = [\n    { value: 'newestFirst', label: 'Newest first' },\n    { value: 'oldestFirst', label: 'Oldest first' },\n    { value: 'dueEarlier', label: 'Due earlier first' },\n    { value: 'dueLater', label: 'Due later first' }\n];\n\nexport { viewOptions, orderByOptions };","/*\nComponents structure:\n\n- App\n    - Title\n    - NewTaskBar\n    - UserDisplayPreference\n        - ViewBar\n        - OrderByBar\n        - SearchBar\n    - TotalTasksToDo\n    - TaskList\n        - Task\n    - ClearTasks\n*/\n\nimport React, { Component } from 'react';\nimport Title from './Title';\nimport NewTaskBar from './NewTaskBar';\nimport UserDisplayPreference from './UserDisplayPreference';\nimport TotalTasksToDo from './TotalTasksToDo';\nimport TasksList from './TasksList';\nimport ClearTasks from './ClearTasks';\nimport { amountTasksToDo } from '../lib/amountTasksToDo';\nimport { updateTasksList } from '../lib/updateTasksList';\nimport { viewOptions, orderByOptions } from '../lib/viewAndOrderByOptions';\n\nclass App extends Component {\n    state = {\n        todoList: [],\n        newTask: '',\n        dueOn: '',\n        searchValue: '',\n        viewValue: 'all',\n        orderByValue: 'newestFirst'\n    }\n    \n    handleChange = e => {\n        const { name, value } = e.target;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleAddNewTask = e => {\n        e.preventDefault();\n        const { newTask, dueOn } = this.state;\n        \n        if (newTask.trim() === '') {\n            return;\n        }\n        \n        const newItem = {\n            id: Date.now(),\n            text: newTask.trim(),\n            postedOn: Date.now(),\n            done: false,\n            dueOn: dueOn,\n            starred: false,\n            isWritable: false,\n            // color: null,\n            // notes: null,\n        };\n        \n        this.setState(state => ({\n            newTask: '',\n            dueOn: '',\n            todoList: state.todoList.concat([newItem]),\n        }));\n    }\n\n    handleTaskAction = (e, taskId, action) => {\n        const { value } = e.target;\n\n        this.setState(state => ({\n            todoList: state.todoList.map(task => {\n                if (task.id === taskId) {\n                    /* if (action === 'done') return Object.assign({}, task, { done: !task.done }) or syntax below */\n                    if (action === 'done') return { ...task, done: !task.done };\n                    if (action === 'star') return { ...task, starred: !task.starred };\n                    if (action === 'click') return { ...task, isWritable: true };\n                    if (action === 'save') return { ...task, isWritable: false };\n                    if (action === 'edit') return { ...task, text: value };\n                    return task;\n                } else {\n                    return task;\n                }\n            })\n        }));\n    }\n\n    handleKeyDown = (e, taskId) => {\n        if (e.key === 'Enter') {\n            this.handleTaskAction(e, taskId, 'save');\n        }\n        // } else if (e.key === 'Escape') {\n    }\n    \n    handleTaskDelete = taskId => {\n        this.setState(state => ({\n            todoList: state.todoList.filter(task => task.id !== taskId)\n        }));\n    }\n    \n    handleClearCompletedTasks = () => {\n        this.setState(state => ({ \n            todoList: state.todoList.filter(task => !task.done)\n        }));\n    }\n\n    handleClearAllTasks = () => {\n        this.setState({\n            todoList: []\n        });\n    }\n    \n    handleLeavePage = () => {\n        localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.handleLeavePage);\n        this.setState({\n            todoList: JSON.parse(localStorage.getItem('todoList')) || []\n        })\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.handleLeavePage);\n    }\n\n    /* update localStorage on each & every state change. Different results than componentWillUnmount() when opening on more than 1 tab at once */\n    // componentDidUpdate() {\n    //  localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n    // }\n\n    render() {\n        const { todoList, newTask, dueOn, searchValue, viewValue, orderByValue } = this.state;\n\n        return (\n            <div>\n                <div className='header'>\n                    <Title />\n                    <NewTaskBar\n                        newTask={newTask}\n                        dueOn={dueOn}\n                        onChange={this.handleChange}\n                        onAddNewTask={this.handleAddNewTask} />\n                    <UserDisplayPreference\n                        viewOptions={viewOptions}\n                        orderByOptions={orderByOptions}\n                        viewValue={viewValue}\n                        orderByValue={orderByValue}\n                        searchValue={searchValue} \n                        onChange={this.handleChange} />\n                </div>\n                <TotalTasksToDo\n                    totalTasksToDo={amountTasksToDo(todoList)} />\n                <TasksList\n                    userPreferenceToDoList={updateTasksList(todoList, viewValue, orderByValue, searchValue)}\n                    onTaskAction={this.handleTaskAction}\n                    onKeyDown={this.handleKeyDown}\n                    onTaskDelete={this.handleTaskDelete} />\n                <ClearTasks\n                    onClearCompletedTasks={this.handleClearCompletedTasks}\n                    onClearAllTasks={this.handleClearAllTasks} />\n            </div>\n        );\n    }\n}\n\nexport default App;","export const amountTasksToDo = todoList => {\n\treturn todoList.filter(task => task.done === false).length;\n};","import moment from 'moment';\n\nexport const updateTasksList = (todoList, viewValue, orderByValue, searchValue) => {\n    let updatedTasksList;\n    \n    if (viewValue === 'current') {\n        updatedTasksList = todoList.filter(task => !task.done);\n    } else if (viewValue === 'completed') {\n        updatedTasksList = todoList.filter(task => task.done);\n    } else if (viewValue === 'starred') {\n        updatedTasksList = todoList.filter(task => task.starred);\n    } else if (viewValue === 'notStarred') {\n        updatedTasksList = todoList.filter(task => !task.starred);\n    } else if (viewValue === 'dated') {\n        updatedTasksList = todoList.filter(task => task.dueOn);\n    } else if (viewValue === 'notDated') {\n        updatedTasksList = todoList.filter(task => !task.dueOn);\n    } else {\n        updatedTasksList = todoList;\n    }\n    \n    if (orderByValue === 'newestFirst') {\n        updatedTasksList = updatedTasksList.sort((a, b) => b.postedOn - a.postedOn);\n    } else if (orderByValue === 'oldestFirst') {\n        updatedTasksList = updatedTasksList.sort((a, b) => a.postedOn - b.postedOn);\n    } else if (orderByValue === 'dueEarlier') {\n        updatedTasksList = updatedTasksList.sort((a, b) => moment(a.dueOn) - moment(b.dueOn));\n    } else {\n        updatedTasksList = updatedTasksList.sort((a, b) => moment(b.dueOn) - moment(a.dueOn));\n    }\n\n    if (searchValue.trim !== '') {\n        updatedTasksList = updatedTasksList.filter(task => task.text.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1);\n    }\n    \n    return updatedTasksList;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './comp/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}