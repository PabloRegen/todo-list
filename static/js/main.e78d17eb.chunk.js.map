{"version":3,"sources":["comp/Title.js","comp/NewTaskBar.js","comp/ViewBar.js","comp/OrderByBar.js","comp/SearchBar.js","comp/UserDisplayPreference.js","lib/emojis.js","comp/TotalTasksToDo.js","comp/EditTask.js","comp/DisplayOrEdit.js","comp/Task.js","comp/TasksList.js","comp/ClearTasks.js","lib/viewAndOrderByOptions.js","comp/App.js","lib/amountTasksToDo.js","lib/updateTasksList.js","index.js"],"names":["Title","react_default","a","createElement","className","NewTaskBar","_ref","newTask","dueOn","onChange","onKeyDown","onAddNewTask","e","undefined","name","type","placeholder","value","onClick","ViewBar","viewOptions","viewValue","map","option","key","label","OrderByBar","orderByValue","orderByOptions","SearchBar","searchValue","UserDisplayPreference","comp_ViewBar","comp_OrderByBar","comp_SearchBar","Emojis","emoji","role","aria-label","emojisQty","emojis","length","TotalTasksToDo","totalTasksToDo","anythingToDo","thingOrThings","displayEmoji","textChanging","onBlur","noteChanging","dateChanging","EditTask","changing","task","onTaskAction","text","note","id","change","Object","objectSpread","whatIsChanging","concat","autoFocus","textCalling","noteCalling","dateCalling","DisplayOrEdit","calling","editingText","editingNote","editingDate","dueOnCalendarStyle","moment","calendar","split","displayEdit","content","editing","whoIsCalling","comp_EditTask","Task","onTaskDelete","done","starred","noteOpen","classTaskCompleted","classDueToday","checked","TasksList","userPreferenceToDoList","listTasks","comp_Task","ClearTasks","onClearCompletedTasks","onClearAllTasks","App","state","todoList","handleChange","_e$target","target","_this","setState","defineProperty","handleKeyDown","taskId","keyDownFor","handleAddNewTask","handleTaskAction","preventDefault","_this$state","trim","newItem","Date","now","postedOn","alert","action","handleTaskDelete","filter","handleClearCompletedTasks","handleClearAllTasks","handleLeavePage","localStorage","setItem","JSON","stringify","window","addEventListener","this","parse","getItem","removeEventListener","_this$state2","comp_Title","comp_NewTaskBar","comp_UserDisplayPreference","comp_ClearTasks","comp_TotalTasksToDo","amountTasksToDo","comp_TasksList","updatedTasksList","sort","b","toLowerCase","indexOf","updateTasksList","Component","ReactDOM","render","comp_App","document","getElementById"],"mappings":"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","file":"static/js/main.e78d17eb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => <p className='title'>TODO LIST</p>;\n\nexport default Title;","import React from 'react';\n\nconst NewTaskBar = ({ newTask, dueOn, onChange, onKeyDown, onAddNewTask }) => {\n    return (\n        <form\n            className='flexRow'\n            onKeyDown={e => onKeyDown(e, undefined, 'keyDownToAddNewTask')}>\n            <input\n                className='newTask'\n            \tname='newTask'\n            \ttype='text'\n            \tplaceholder='I need to...'\n            \tvalue={newTask}\n            \tonChange={onChange} />\n            <span\n                className='due'>\n                Due:\n            </span>\n            <input\n                className='dueOn fontFamily pointer'\n                name='dueOn'\n                type='date'\n                value={dueOn}\n                onChange={onChange} />\n            <button className='addBtn pointer' type='button' onClick={onAddNewTask}>ADD</button>\n        </form>\n    );\n};\n\nexport default NewTaskBar;","import React from 'react';\n\nconst ViewBar = ({ viewOptions, viewValue, onChange }) => {\n\treturn (\n\t    <select\n\t        className='select pointer'\n\t        name='viewValue'\n\t        value={viewValue}\n\t        onChange={onChange}\n\t    >\n\t        { viewOptions.map(option => <option key={option.value} value={option.value}>{option.label}</option>) }\n\t    </select>\n\t);\n};\n\nexport default ViewBar;","import React from 'react';\n\nconst OrderByBar = ({ orderByValue, orderByOptions, onChange }) => {\t\n\treturn (\n\t    <select\n\t        className='select pointer'\n\t        name='orderByValue'\n\t        value={orderByValue}\n\t        onChange={onChange}\n\t    >\n\t        { orderByOptions.map(option => <option key={option.value} value={option.value}>{option.label}</option>) }\n\t    </select>\n\t);\n};\n\nexport default OrderByBar;","import React from 'react';\n\nconst SearchBar = ({ searchValue, onChange }) => {\n\treturn (\n\t    <input\n\t        className='search'\n\t        name='searchValue'\n\t        type='search'\n\t        placeholder='Search tasks...'\n\t        value={searchValue}\n\t        onChange={onChange}\n\t    />\n\t);\n};\n\nexport default SearchBar;","import React from 'react';\nimport ViewBar from './ViewBar';\nimport OrderByBar from './OrderByBar';\nimport SearchBar from './SearchBar';\n\nconst UserDisplayPreference = ({ viewOptions, orderByOptions, viewValue, orderByValue, searchValue, onChange }) => {\n    return (\n        <div className='flexRow'>\n            <ViewBar\n                viewOptions={viewOptions}\n                viewValue={viewValue}\n                onChange={onChange} />\n            <OrderByBar\n                orderByOptions={orderByOptions}\n                orderByValue={orderByValue}\n                onChange={onChange} />\n            <SearchBar\n                searchValue={searchValue}\n                onChange={onChange} />\n        </div>\n    );\n};\n\nexport default UserDisplayPreference;","import React from 'react';\n\nconst emojiList = [\n\t{emoji: '😃', label: 'Grinning Face With Big Eyes'},\n\t{emoji: '🤔', label: 'Thinking Face'},\n\t{emoji: '😐', label: 'Neutral Face'},\n\t{emoji: '😕', label: 'Confused Face'},\n\t{emoji: '🙁', label: 'Slightly Frowning Face'},\n\t{emoji: '☹️', label: 'Frowning Face'},\n\t{emoji: '😟', label: 'Worried Face'},\n\t{emoji: '😯', label: 'PHushed Face'},\n\t{emoji: '🤕', label: 'Face With Head-Bandage'},\n\t{emoji: '😱', label: 'Face Screaming in Fear'}\n];\n\nconst Emojis = emojiList => {\n\treturn emojiList.map(emoji => <span role='img' aria-label={emoji.label}>{emoji.emoji}</span>);\n}\n\nexport default Emojis(emojiList);","import React from 'react';\nimport emojis from '../lib/emojis';\n\nconst emojisQty = emojis.length;\n\nconst TotalTasksToDo = ({totalTasksToDo}) => {\n\tconst anythingToDo = totalTasksToDo === 0 ? 'Nothing' : totalTasksToDo;\n\tconst thingOrThings = totalTasksToDo === 0 ? '' : (totalTasksToDo === 1 ? 'thing' : 'things');\n\tconst displayEmoji = totalTasksToDo < emojisQty ? emojis[totalTasksToDo] : emojis[emojisQty - 1];\n\n\treturn <span className='totalTasks'>{anythingToDo} {thingOrThings} to do {displayEmoji}</span>;\n};\n\nexport default TotalTasksToDo;","import React from 'react';\n\nconst textChanging = {\n\tclassName: 'editText',\n\ttype: 'text',\n\tonChange: 'editText',\n\tonBlur: 'saveText',\n\tonKeyDown: 'keyDownToEditText'\n};\n\nconst noteChanging = {\n\tclassName: 'editNote',\n\ttype: 'text',\n\tonChange: 'editNote',\n\tonBlur: 'saveNote',\n\tonKeyDown: 'keyDownToEditNote'\n};\n\nconst dateChanging = {\n\tclassName: 'editDate',\n\ttype: 'date',\n\tonChange: 'editDate',\n\tonBlur: 'saveDate',\n\tonKeyDown: 'keyDownToEditDate'\n};\n\nconst EditTask = ({ changing, task, onTaskAction, onKeyDown }) => {\n\tconst { text, note, dueOn, id } = task;\n\n\tconst whatIsChanging = changing => {\n\t\tif (changing === 'theText') return { ...textChanging, value: text };\n\t\tif (changing === 'theNote') return { ...noteChanging, value: note };\n\t\tif (changing === 'theDate') return { ...dateChanging, value: dueOn};\n\t};\n\n\tconst change = whatIsChanging(changing);\n\n\treturn (\n\t    <input\n\t        className={ `${change.className} fontFamily` }\n\t        type={ change.type }\n\t        value={ change.value }\n\t        onChange={ e => onTaskAction(e, id, change.onChange) }\n\t        onBlur={ e => onTaskAction(e, id, change.onBlur) }\n\t        onKeyDown={ e => onKeyDown(e, id, change.onKeyDown) }\n\t        autoFocus />\n\t);\n};\n\nexport default EditTask;","import React from 'react';\nimport moment from 'moment';\nimport EditTask from './EditTask';\n\nconst textCalling = {\n    className: 'textContent',\n    onClick: 'clickText',\n    placeholder: 'Task...'\n};\n\nconst noteCalling = {\n    className: 'noteContent',\n    onClick: 'clickNote',\n    placeholder: 'Add Note...'\n};\n\nconst dateCalling = {\n    className: 'dateContent',\n    onClick: 'clickDate',\n    placeholder: 'Due On...'\n};\n\nconst DisplayOrEdit = (calling, task, onTaskAction, onKeyDown) => {\n    const { id, text, note, dueOn, editingText, editingNote, editingDate } = task;\n    const dueOnCalendarStyle = (dueOn === '' ? '' : moment(dueOn, 'YYYY-MM-DD').calendar().split(' at')[0]);\n\n    const whoIsCalling = calling => {\n        if (calling === 'theText') return { ...textCalling, content: text, editing: editingText };\n        if (calling === 'theNote') return { ...noteCalling, content: note, editing: editingNote };\n        if (calling === 'theDate') return { ...dateCalling, content: dueOnCalendarStyle, editing: editingDate };\n    }\n\n    const displayEdit = whoIsCalling(calling);\n\n    if (displayEdit.editing) {\n        return (\n            <EditTask\n                changing={calling}\n                task={task}\n                onTaskAction={onTaskAction}\n                onKeyDown={onKeyDown} />\n        );\n    } else {\n        return (\n            <span\n                className={`${displayEdit.className} pointer`}\n                onClick={e => onTaskAction(e, id, displayEdit.onClick)}>\n                {displayEdit.content || displayEdit.placeholder}\n            </span>\n        );\n    }\n}\n\nexport default DisplayOrEdit;","import React from 'react';\nimport moment from 'moment';\nimport DisplayOrEdit from './DisplayOrEdit';\n\nconst Task = ({ task, onTaskAction, onKeyDown, onTaskDelete }) => {\n    const { done, dueOn, starred, id, noteOpen } = task;\n    const classTaskCompleted = (done ? 'taskCompleted' : '');\n    const dueOnText = (dueOn === '' ? '' : moment(dueOn, 'YYYY-MM-DD').calendar().split(' at')[0]);\n    const classDueToday = (dueOnText === 'Today' ? 'dueToday' : '');\n\n    return (\n        <li>\n            <form>\n                <div className='flexRow'>\n                    <input\n                        className='check pointer'\n                        type='checkbox'\n                        checked={done}\n                        onChange={e => onTaskAction(e, id, 'taskDone')} />\n                    <span></span>\n                    <button \n                        className={`collapsibleButton ${noteOpen ? 'showing' : 'hiding'}`}\n                        type='button'\n                        onClick={e => onTaskAction(e, id, 'clickCollapsible')} />\n                    <span\n                        className={`textFlex ${classTaskCompleted}`}>\n                        {DisplayOrEdit('theText', task, onTaskAction, onKeyDown)}\n                    </span>\n                    <span\n                        className={`${classTaskCompleted} ${classDueToday}`}>\n                        {DisplayOrEdit('theDate', task, onTaskAction, onKeyDown)}\n                    </span>\n                    <input\n                        className='star pointer'\n                        type='checkbox'\n                        checked={starred}\n                        onChange={e => onTaskAction(e, id, 'taskStarred')} />\n                    <span></span>\n                    <button\n                        className='deleteButton pointer'\n                        type='button'\n                        onClick={() => onTaskDelete(id)}>\n                        x\n                    </button>\n                </div>\n                <div className={`noteSection ${classTaskCompleted} ${noteOpen ? '' : 'hiding'}`}>\n                    {DisplayOrEdit('theNote', task, onTaskAction, onKeyDown)}\n                </div>\n            </form>\n        </li>\n    );\n};\n\nexport default Task; ","import React from 'react';\nimport Task from './Task';\n\nconst TasksList = ({ userPreferenceToDoList, onTaskAction, onKeyDown, onTaskDelete }) => {\n    const listTasks = userPreferenceToDoList.map(task => (\n        <Task\n            key={task.id}\n            task={task}\n            onTaskAction={onTaskAction}\n            onKeyDown={onKeyDown}\n            onTaskDelete={onTaskDelete} />\n    ));\n    \n    return <ul>{listTasks}</ul>;\n};\n\nexport default TasksList;","import React from 'react';\n\nconst ClearTasks = ({ onClearCompletedTasks, onClearAllTasks }) => {\n    return (\n        <div className='flexRow'>\n            <button\n                className='clearCompletedBtn pointer'\n            \ttype='button'\n            \tonClick={onClearCompletedTasks}>\n            \tClear completed\n            </button>\n            <button\n                className='clearAllBtn pointer'\n            \ttype='button'\n            \tonClick={onClearAllTasks}>\n            \tClear all\n            </button>\n        </div>\n    );\n};\n\nexport default ClearTasks;","const viewOptions = [\n    { value: 'all', label: 'All tasks' },\n    { value: 'current', label: 'Active' },\n    { value: 'completed', label: 'Completed' },\n    { value: 'starred', label: 'Starred' },\n    { value: 'notStarred', label: 'Not starred' },\n    { value: 'dated', label: 'Dated' },\n    { value: 'notDated', label: 'Not dated' }\n];\n\nconst orderByOptions = [\n    { value: 'newestFirst', label: 'Newest first' },\n    { value: 'oldestFirst', label: 'Oldest first' },\n    { value: 'dueEarlier', label: 'Due earlier first' },\n    { value: 'dueLater', label: 'Due later first' }\n];\n\nexport { viewOptions, orderByOptions };","/*\nComponents structure:\n\n- App\n    - Title\n    - NewTaskBar\n    - UserDisplayPreference\n        - ViewBar\n        - OrderByBar\n        - SearchBar\n    - ClearTasks\n    - TotalTasksToDo\n    - TaskList\n*/\n\nimport React, { Component } from 'react';\nimport Title from './Title';\nimport NewTaskBar from './NewTaskBar';\nimport UserDisplayPreference from './UserDisplayPreference';\nimport TotalTasksToDo from './TotalTasksToDo';\nimport TasksList from './TasksList';\nimport ClearTasks from './ClearTasks';\nimport { amountTasksToDo } from '../lib/amountTasksToDo';\nimport { updateTasksList } from '../lib/updateTasksList';\nimport { viewOptions, orderByOptions } from '../lib/viewAndOrderByOptions';\n\nclass App extends Component {\n    state = {\n        todoList: [],\n        newTask: '',\n        dueOn: '',\n        searchValue: '',\n        viewValue: 'all',\n        orderByValue: 'newestFirst'\n    }\n    \n    handleChange = e => {\n        const { name, value } = e.target;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleKeyDown = (e, taskId, keyDownFor) => {\n        if (e.key === 'Enter') {\n            if (keyDownFor === 'keyDownToAddNewTask') this.handleAddNewTask(e);\n            if (keyDownFor === 'keyDownToEditText') this.handleTaskAction(e, taskId, 'saveText');\n            if (keyDownFor === 'keyDownToEditDate') this.handleTaskAction(e, taskId, 'saveDate');\n        }\n        // } else if (e.key === 'Escape') {\n    }\n\n    handleAddNewTask = e => {\n        e.preventDefault();\n        const { newTask, dueOn } = this.state;\n        \n        if (newTask.trim() === '') {\n            alert('▶ Please write a task');\n            return;\n        }\n        \n        const newItem = {\n            id: Date.now(),\n            text: newTask.trim(),\n            postedOn: Date.now(),\n            done: false,\n            note: '',\n            dueOn: dueOn,\n            starred: false,\n            editingText: false,\n            editingDate: false,\n            editingNote: false,\n            noteOpen: false,\n            // color: null,\n        };\n        \n        this.setState(state => ({\n            newTask: '',\n            dueOn: '',\n            todoList: state.todoList.concat([newItem]),\n        }));\n    }\n\n    handleTaskAction = (e, taskId, action) => {\n        const { value } = e.target;\n\n        this.setState(state => ({\n            todoList: state.todoList.map(task => {\n                if (task.id === taskId) {\n                    /* Use `if (action === 'done') return Object.assign({}, task, { done: !task.done })` or syntax below */\n                    if (action === 'taskDone') return { ...task, done: !task.done };\n                    if (action === 'taskStarred') return { ...task, starred: !task.starred };\n\n                    if (action === 'clickText') return { ...task, editingText: true };\n                    if (action === 'saveText') return { ...task, editingText: false };\n                    if (action === 'editText') return { ...task, text: value };\n\n                    if (action === 'clickDate') return { ...task, editingDate: true };\n                    if (action === 'saveDate') return { ...task, editingDate: false };\n                    if (action === 'editDate') return { ...task, dueOn: value };\n\n                    if (action === 'clickNote') return { ...task, editingNote: true };\n                    if (action === 'saveNote') return { ...task, editingNote: false };\n                    if (action === 'editNote') return { ...task, note: value };\n\n                    if (action === 'clickCollapsible') return { ...task, noteOpen: !task.noteOpen };\n                    return task;\n                } else {\n                    return task;\n                }\n            })\n        }));\n    }\n\n    handleTaskDelete = taskId => {\n        this.setState(state => ({\n            todoList: state.todoList.filter(task => task.id !== taskId)\n        }));\n    }\n    \n    handleClearCompletedTasks = () => {\n        this.setState(state => ({ \n            todoList: state.todoList.filter(task => !task.done)\n        }));\n    }\n\n    handleClearAllTasks = () => {\n        this.setState({\n            todoList: []\n        });\n    }\n    \n    handleLeavePage = () => {\n        localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n    }\n\n    componentDidMount() {\n        window.addEventListener('beforeunload', this.handleLeavePage);\n        this.setState({\n            todoList: JSON.parse(localStorage.getItem('todoList')) || []\n        })\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.handleLeavePage);\n    }\n\n    /* update localStorage on each & every state change. Different results than componentWillUnmount() when opening on more than 1 tab at once */\n    // componentDidUpdate() {\n    //  localStorage.setItem('todoList', JSON.stringify(this.state.todoList));\n    // }\n\n    render() {\n        const { todoList, newTask, dueOn, searchValue, viewValue, orderByValue } = this.state;\n\n        return (\n            <div>\n                <div className='header'>\n                    <Title />\n                    <NewTaskBar\n                        newTask={newTask}\n                        dueOn={dueOn}\n                        onChange={this.handleChange}\n                        onKeyDown={this.handleKeyDown} \n                        onAddNewTask={this.handleAddNewTask} />\n                    <div className='flexRow'>\n                        <UserDisplayPreference\n                            viewOptions={viewOptions}\n                            orderByOptions={orderByOptions}\n                            viewValue={viewValue}\n                            orderByValue={orderByValue}\n                            searchValue={searchValue}\n                            onChange={this.handleChange} />\n                        <ClearTasks\n                            onClearCompletedTasks={this.handleClearCompletedTasks}\n                            onClearAllTasks={this.handleClearAllTasks} />\n                        <TotalTasksToDo\n                            totalTasksToDo={amountTasksToDo(todoList)} />\n                    </div>\n                </div>\n                <TasksList\n                    userPreferenceToDoList={updateTasksList(todoList, viewValue, orderByValue, searchValue)}\n                    onTaskAction={this.handleTaskAction}\n                    onKeyDown={this.handleKeyDown}\n                    onTaskDelete={this.handleTaskDelete} />\n            </div>\n        );\n    }\n}\n\nexport default App;","export const amountTasksToDo = todoList => {\n\treturn todoList.filter(task => task.done === false).length;\n};","import moment from 'moment';\n\nexport const updateTasksList = (todoList, viewValue, orderByValue, searchValue) => {\n    let updatedTasksList;\n    \n    if (viewValue === 'current') {\n        updatedTasksList = todoList.filter(task => !task.done);\n    } else if (viewValue === 'completed') {\n        updatedTasksList = todoList.filter(task => task.done);\n    } else if (viewValue === 'starred') {\n        updatedTasksList = todoList.filter(task => task.starred);\n    } else if (viewValue === 'notStarred') {\n        updatedTasksList = todoList.filter(task => !task.starred);\n    } else if (viewValue === 'dated') {\n        updatedTasksList = todoList.filter(task => task.dueOn);\n    } else if (viewValue === 'notDated') {\n        updatedTasksList = todoList.filter(task => !task.dueOn);\n    } else {\n        updatedTasksList = todoList;\n    }\n    \n    if (orderByValue === 'newestFirst') {\n        updatedTasksList = updatedTasksList.sort((a, b) => b.postedOn - a.postedOn);\n    } else if (orderByValue === 'oldestFirst') {\n        updatedTasksList = updatedTasksList.sort((a, b) => a.postedOn - b.postedOn);\n    } else if (orderByValue === 'dueEarlier') {\n        updatedTasksList = updatedTasksList.sort((a, b) => moment(a.dueOn) - moment(b.dueOn));\n    } else {\n        updatedTasksList = updatedTasksList.sort((a, b) => moment(b.dueOn) - moment(a.dueOn));\n    }\n\n    if (searchValue.trim !== '') {\n        updatedTasksList = updatedTasksList.filter(task => task.text.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1);\n    }\n    \n    return updatedTasksList;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './comp/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}